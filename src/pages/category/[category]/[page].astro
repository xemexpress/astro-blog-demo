---
import type { GetStaticPathsOptions, Page } from "astro";
import { getCollection } from "astro:content";
import CategoryList from "../../../components/CategoryList.astro";
import H1 from "../../../components/H1.astro";
import Main from "../../../components/Main.astro";
import Pagination from "../../../components/Pagination.astro";
import PostList from "../../../components/PostList.astro";
import Layout from "../../../layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";

const page = Number(Astro.url.searchParams.get("page")) || 1;
const postsPerPage = 6;
const start = postsPerPage * (page - 1);
const end = start + postsPerPage;

const category = Astro.params.category as string;
const allPosts = (await getCollection("posts")).filter((post) =>
    post.data.categories.includes(category)
);
const posts = allPosts.slice(start, end);

// export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
//     const posts = await getCollection("posts");
//     const allCategories = posts.flatMap((post) => post.data.categories);
//     const categories = [...new Set(allCategories)];

//     const paths = categories.flatMap((category) => {
//         const postsByCategory = posts.filter((post) =>
//             post.data.categories.includes(category)
//         );
//         console.log("ok");

//         return paginate(postsByCategory, {
//             params: { category },
//             pageSize: 2,
//         });
//     });

//     return paths;
// }

// type Props = {
//     page: Page;
// };

// const { page } = Astro.props;
// const posts = page.data as CollectionEntry<"posts">[];
// const { category } = Astro.params;
---

<Layout
    title={category}
    description="Read and learn from Music Producers and Enthusiasts"
>
    <Main>
        <H1 text="Rhythm Nation Blog" />
        <p class="' text-zinc-900 text-2xl mb-24 max-sm:mb-14">
            Join the Community and learn from Music Producers and Enthusiasts
        </p><a class="text-zinc-500 text-2xl mb-16 underline block" href="/blog"
            >‚Üê Back to all posts</a
        >
        <CategoryList categories={[category]} title="Posts tagged" />
        <div class="mb-12">
            <Pagination numberOfPosts={allPosts.length} page={page} />
        </div>
        {
            posts.length === 0 ? (
                <p>No posts were found with that tag.</p>
            ) : (
                <PostList posts={posts} />
            )
        }
        <div class="mb-12">
            <Pagination numberOfPosts={allPosts.length} page={page} />
        </div>
    </Main>
</Layout>
